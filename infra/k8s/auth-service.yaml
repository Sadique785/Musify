apiVersion: v1
kind: Secret
metadata:
  name: auth-service-secret
stringData:
  SECRET_KEY: "django-insecure-quc1n20^5b*o7rkimf*x8!5!21c(#w$k8)d1uzj4+s(3y_x3)4"
  DB_NAME: "auth_db"
  DB_USER: "postgres"
  DB_PASSWORD: "Sadique785"
  EMAIL_HOST_USER: "sadiquemon12345@gmail.com"
  EMAIL_HOST_PASSWORD: "vcjl jdza biez xuzc"
type: Opaque
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-service-configmap
data:
  DEBUG: "True"
  ALLOWED_HOSTS: "auth-service,auth-service.default.svc.cluster.local,localhost,127.0.0.1,musify.sadique.live"
  DB_HOST: "auth-service.c3iy20uqsyh9.ap-south-1.rds.amazonaws.com"
  DB_PORT: "5433"
  CORS_ALLOWED_ORIGINS: "http://gateway-service:8000,http://gateway-service.default.svc.cluster.local:8000,https://musify.sadique.live"
  CSRF_TRUSTED_ORIGINS: "http://gateway-service:8000,http://gateway-service.default.svc.cluster.local:8000,https://musify.sadique.live"
  CSRF_COOKIE_DOMAIN: ""
  REDIS_HOST: "localhost"
  REDIS_PORT: "6379"
  EMAIL_BACKEND: "django.core.mail.backends.smtp.EmailBackend"
  EMAIL_HOST: "smtp.gmail.com"
  EMAIL_PORT: "587"
  EMAIL_USE_TLS: "True"
  KAFKA_BOOTSTRAP_SERVERS: "kafka.kafka.svc.cluster.local:9092"


---

apiVersion: batch/v1
kind: Job
metadata:
  name: django-migrations-auth
spec:
  template:
    metadata:
      name: django-migrations-auth-pod
      labels:
        app: django-migrations-auth
    spec:
      containers:
      - name: auth-service
        image: vssadique123/auth_service:v0.2
        command: ['python', 'manage.py', 'migrate']
        envFrom:
        - configMapRef:
            name: auth-service-configmap
        - secretRef:
            name: auth-service-secret
      restartPolicy: Never
  backoffLimit: 5

---

apiVersion: v1
kind: Service
metadata:
  name: auth-service
spec:
  selector:
    app: auth-service
  type: ClusterIP
  ports:
    - port: 8001
      targetPort: 8001
      protocol: TCP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  labels:
    app: auth-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
        - name: auth-service
          image: vssadique123/auth_service:v0.2
          ports:
            - containerPort: 8001
          envFrom:
            - configMapRef:
                name: auth-service-configmap
            - secretRef:
                name: auth-service-secret
          resources:
            requests:
              memory: "192Mi"    # Reduced from 256Mi
              cpu: "150m"        # Reduced from 200m
            limits:
              memory: "384Mi"    # Reduced from 512Mi
              cpu: "300m"  