apiVersion: v1
kind: Secret
metadata:
  name: content-service-secret
stringData:
  SECRET_KEY: "django-insecure-quc1n20^5b*o7rkimf*x8!5!21c(#w$k8)d1uzj4+s(3y_x3)4"
  DB_NAME: "content_db"
  DB_USER: "postgres"
  DB_PASSWORD: "Sadique785"
type: Opaque

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: content-service-configmap
data:
  DEBUG: "True"
  ALLOWED_HOSTS: "content-service,content-service.default.svc.cluster.local,localhost,127.0.0.1,musify.sadique.live"
  CORS_ALLOWED_ORIGINS: "http://gateway-service:8000,http://gateway-service.default.svc.cluster.local:8000,https://musify.sadique.live"
  CSRF_TRUSTED_ORIGINS: "http://gateway-service:8000,http://gateway-service.default.svc.cluster.local:8000,https://musify.sadique.live"
  DB_HOST: "auth-service.c3iy20uqsyh9.ap-south-1.rds.amazonaws.com"
  DB_PORT: "5433"
  KAFKA_BOOTSTRAP_SERVERS: "kafka.kafka.svc.cluster.local:9092"
  KAFKA_GROUP_ID: "content-consumer-group"
  KAFKA_AUTO_OFFSET_RESET: "earliest"


---

apiVersion: batch/v1
kind: Job
metadata:
  name: django-migrations-content
spec:
  template:
    metadata:
      name: django-migrations-content-pod
      labels:
        app: django-migrations-content
    spec:
      containers:
      - name: content-service
        image: vssadique123/musify_content:v0.1
        command: ['python', 'manage.py', 'migrate']
        envFrom:
        - configMapRef:
            name: content-service-configmap
        - secretRef:
            name: content-service-secret
      restartPolicy: Never
  backoffLimit: 5

---

apiVersion: v1
kind: Service
metadata:
  name: content-service
spec:
  selector:
    app: content-service
  type: ClusterIP
  ports:
    - port: 8002
      targetPort: 8002
      protocol: TCP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: content-service
  labels:
    app: content-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: content-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
  template:
    metadata:
      labels:
        app: content-service
    spec:
      containers:
        - name: content-service
          image: vssadique123/musify_content:v0.2
          ports:
            - containerPort: 8002
          envFrom:
            - configMapRef:
                name: content-service-configmap
            - secretRef:
                name: content-service-secret
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "512Mi"
              cpu: "400m"
        - name: kafka-consumer-content
          image: vssadique123/musify_content:v0.1
          command: ["python", "manage.py", "start_kafka_consumer"]
          envFrom:
            - configMapRef:
                name: content-service-configmap
            - secretRef:
                name: content-service-secret
          resources:
            requests:
              memory: "192Mi"    # Reduced from 256Mi
              cpu: "150m"        # Reduced from 200m
            limits:
              memory: "384Mi"    # Reduced from 512Mi
              cpu: "300m"    