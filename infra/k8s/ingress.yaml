apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: musify-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # Critical for cert-manager to work
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    acme.cert-manager.io/http01-edit-in-place: "true"
    
    nginx.ingress.kubernetes.io/websocket-services: "connection-service"
    
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"

    nginx.ingress.kubernetes.io/proxy-read-timeout-websocket: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout-websocket: "3600"
    
    nginx.ingress.kubernetes.io/server-snippets: |
      location / {
        proxy_set_header Upgrade $http_upgrade;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;

        proxy_connect_timeout 3600;
        proxy_send_timeout 3600;
        proxy_read_timeout 3600;
      }

    nginx.ingress.kubernetes.io/proxy-set-headers: |
      Host $host
      X-Real-IP $remote_addr
      X-Forwarded-For $proxy_add_x_forwarded_for
      X-Forwarded-Proto $scheme
    
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://musify.sadique.live"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Upgrade,X-Websocket-Protocol,Upgrade"

spec:
  ingressClassName: "nginx"
  tls:
  - hosts:
    - musify.sadique.live
    secretName: musify-tls
  rules:
    - host: musify.sadique.live
      http:
        paths:
          # ACME challenge path - MUST COME FIRST
          - path: /.well-known/acme-challenge
            pathType: ImplementationSpecific
            backend:
              service:
                name: frontend-service
                port:
                  number: 3000
                  
          # API endpoints
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: gateway-service
                port:
                  number: 8000
          
          # WebSocket endpoints
          - path: /ws
            pathType: Prefix
            backend:
              service:
                name: connection-service
                port:
                  number: 8003
          
          # Frontend service
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 3000